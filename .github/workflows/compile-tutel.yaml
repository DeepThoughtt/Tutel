name: Build and release

on:
  push:
    tags:
      - '*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Compile app for Windows
      run: |
        pyinstaller --onefile --windowed Tutel.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: Tutel-Windows
        path: dist/

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Compile app for Linux
      run: |
        pyinstaller --onefile --windowed Tutel.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: Tutel-Linux
        path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: Tutel-*

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload both release assets
      run: |
        gh release upload ${{ github.ref_name }} dist/Tutel-Windows/Tutel.exe#Tutel.exe dist/Tutel-Linux/Tutel#Tutel
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
